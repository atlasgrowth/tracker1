<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="/analytics.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
    <script>
      const urlParams = new URLSearchParams(window.location.search);
      const siteId = urlParams.get('site_id');

      if (siteId) {
        const SESSION = {
          siteId: siteId,
          startTime: Date.now(),
          lastActive: Date.now(),
          deviceInfo: {
            browser: navigator.userAgent,
            os: navigator.platform,
            screenSize: {
              width: window.screen.width,
              height: window.screen.height
            }
          },
          locationInfo: {
            country: 'Unknown',
            region: 'Unknown'
          },
          pageViews: [],
          clicks: [],
          navigationPath: []
        };

        function recordPageView() {
          const pageView = {
            path: window.location.pathname + window.location.search,
            timestamp: Date.now(),
            timeSpent: 0,
            scrollDepth: 0,
            deviceInfo: SESSION.deviceInfo,
            location: SESSION.locationInfo
          };

          let maxScroll = 0;
          document.addEventListener('scroll', () => {
            const scrollPercent = 
              (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
            maxScroll = Math.max(maxScroll, scrollPercent);
            pageView.scrollDepth = maxScroll;
          });

          const interval = setInterval(() => {
            pageView.timeSpent = Date.now() - pageView.timestamp;
            SESSION.lastActive = Date.now();
          }, 1000);

          SESSION.pageViews.push(pageView);
          SESSION.navigationPath.push(pageView.path);

          window.addEventListener('beforeunload', () => {
            clearInterval(interval);
            sendAnalytics();
          });
        }

        document.addEventListener('click', (e) => {
          const target = e.target;
          if (target instanceof HTMLElement) {
            SESSION.clicks.push({
              path: window.location.pathname + window.location.search,
              timestamp: Date.now(),
              elementId: target.id || '',
              elementText: target.innerText || '',
              position: {
                x: e.clientX,
                y: e.clientY
              }
            });
          }
        });

        async function sendAnalytics() {
          const PIPELINE_URL = 'https://bbd5027a-f3b6-48cb-b2e3-7c31fdf9c394-00-1a4b9g7vepksy.janeway.replit.dev';

          try {
            await fetch(`${PIPELINE_URL}/api/businesses/${siteId}/visits`, {
              method: 'POST',
              headers: { 
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify({
                duration: Math.round((Date.now() - SESSION.startTime) / 1000),
                source: document.referrer || 'direct'
              }),
              mode: 'cors'
            });

            await fetch(`${PIPELINE_URL}/api/businesses/${siteId}/analytics`, {
              method: 'POST',
              headers: { 
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              },
              body: JSON.stringify(SESSION),
              mode: 'cors'
            });
          } catch (e) {
            console.error('Failed to send analytics:', e);
          }
        }

        recordPageView();
        setInterval(sendAnalytics, 30000);
      }
    </script>
  </body>
</html>